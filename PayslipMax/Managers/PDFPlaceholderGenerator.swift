import Foundation
import UIKit

/// A utility responsible for generating placeholder PDF documents.
/// These placeholders are used when an original PDF is corrupt and cannot be repaired or displayed.
struct PDFPlaceholderGenerator {
    /// Creates data for a placeholder PDF document.
    /// The placeholder explains that the original PDF could not be displayed but the data is available in the app.
    /// - Returns: `Data` representing the placeholder PDF.
    func createPlaceholderPDF() -> Data {
        let pageRect = CGRect(x: 0, y: 0, width: 595.2, height: 841.8) // A4 size
        let renderer = UIGraphicsPDFRenderer(bounds: pageRect)
        
        return renderer.pdfData { context in
            context.beginPage()
            
            let titleFont = UIFont.boldSystemFont(ofSize: 24)
            let headerFont = UIFont.boldSystemFont(ofSize: 18)
            let textFont = UIFont.systemFont(ofSize: 16)
            let smallFont = UIFont.systemFont(ofSize: 14)
            
            // Title
            let titleRect = CGRect(x: 50, y: 50, width: pageRect.width - 100, height: 50)
            "Payslip Details".draw(in: titleRect, withAttributes: [
                NSAttributedString.Key.font: titleFont,
                NSAttributedString.Key.foregroundColor: UIColor.darkText
            ])
            
            // Message about placeholder
            let messageRect = CGRect(x: 50, y: 120, width: pageRect.width - 100, height: 80)
            let message = "The original PDF document could not be displayed due to formatting issues or data corruption. Military and government PDFs may have security features that prevent direct viewing."
            message.draw(in: messageRect, withAttributes: [
                NSAttributedString.Key.font: textFont,
                NSAttributedString.Key.foregroundColor: UIColor.darkText
            ])
            
            // Payslip info message
            let infoRect = CGRect(x: 50, y: 220, width: pageRect.width - 100, height: 60)
            "The payslip data is still available and can be viewed in the app interface. This document is provided for sharing purposes.".draw(in: infoRect, withAttributes: [
                NSAttributedString.Key.font: textFont,
                NSAttributedString.Key.foregroundColor: UIColor.darkText
            ])
            
            // Technical details section
            let techHeaderRect = CGRect(x: 50, y: 300, width: pageRect.width - 100, height: 30)
            "Technical Information:".draw(in: techHeaderRect, withAttributes: [
                NSAttributedString.Key.font: headerFont,
                NSAttributedString.Key.foregroundColor: UIColor.darkText
            ])
            
            let techInfoRect = CGRect(x: 50, y: 340, width: pageRect.width - 100, height: 200)
            let techInfo = """
            • Some military and government PDFs use security features that prevent standard viewing
            • PDF format: v1.7, Adobe ExtensionLevel: 8
            • Content may be encrypted or use special rendering methods
            • Try viewing the document in Adobe Acrobat or external applications
            • The app uses the extracted data to display payslip information
            """
            
            techInfo.draw(in: techInfoRect, withAttributes: [
                NSAttributedString.Key.font: smallFont,
                NSAttributedString.Key.foregroundColor: UIColor.darkText
            ])
            
            // Footer
            let footerRect = CGRect(x: 50, y: pageRect.height - 50, width: pageRect.width - 100, height: 30)
            "Generated by PayslipMax App".draw(in: footerRect, withAttributes: [
                NSAttributedString.Key.font: smallFont,
                NSAttributedString.Key.foregroundColor: UIColor.darkGray
            ])
        }
    }
} 